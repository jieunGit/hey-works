<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="approvalMapper">

	<resultMap type="Approval" id="approvalResult">
		<result column="elec_appr_no" property="approvalNo" />
		<result column="writer_name" property="userNo" />
		<result column="form_no" property="formNo" />
		<result column="write_dept" property="writeDept" />
		<result column="elec_title" property="approvalTitle" />
		<result column="emc_yn" property="emergancy" />
		<result column="storage_year" property="storageYear" />
		<result column="grade" property="grade" />
		<result column="read_no" property="read" />
		<result column="reference_no" property="reference" />
		<result column="create_date" property="createDate" />
		<result column="status" property="status" />
		<result column="origin_name" property="originName" />
		<result column="file_path" property="filePath" />
				
		<result column="buy_req_team" property="requestTeam" />
		<result column="limit_date" property="limitDate" />
		<result column="pay" property="pay" />
		<result column="purpose" property="purpose" />
		<result column="total_pay" property="totalPay" />
		
		<result column="first_user" property="firstUser" />
		<result column="third_user" property="thirdUser" />
		
		<result column="bdContent" property="businessDraftContent" />
		
		<result column="certificate_type" property="certificateType" />
		<result column="use" property="use" />
		<result column="where_submit" property="whereSubmit" />
		<result column="submit_date" property="submitDate" />
		<result column="crContent" property="certificateContent" />
		
		<result column="dept" property="recruimentDept" />
		<result column="employee" property="employee" />
		<result column="work_experience" property="workExperience" />
		<result column="offer_date" property="offerDate" />
		<result column="qualification" property="qualification" />
		<result column="position" property="position" />
		<result column="rcContent" property="recruimentContent" />
		
		<result column="imposition" property="imposition" />
		<result column="erContent" property="expenseReportContent" />

		<collection property="itemList" javaType="java.util.ArrayList" resultMap="itemListResultMap" />	
		<collection property="confirmList" javaType="java.util.ArrayList" resultMap="confirmListResultMap" />	
	</resultMap>
	
	<resultMap id="itemListResultMap" type="java.util.HashMap">
		<result property="itemNo" column="itemNo" />
		<result property="itemSeq" column="itemSeq" />
		<result property="itemName" column="itemName" />
		<result property="itemSize" column="itemSize" />
		<result property="unit" column="unit" />
		<result property="total" column="total" />
		<result property="amount" column="amount" />
		<result property="note" column="note" />
	</resultMap>
	
	<resultMap id="confirmListResultMap" type="java.util.HashMap">
		<result property="confirmNo" column="confirmNo" />
		<result property="confirmUser" column="confirmUser" />
		<result property="jobCode" column="jobCode" />
		<result property="confirmStatus" column="confirmStatus" />
		<result property="rejectReason" column="rejectReason" />
		<result property="confirmDate" column="confirmDate" />
		<result property="procedureNo" column="procedureNo" />
	</resultMap>

	<!-- 내가 결재자일경우 진행중인 문서 -->
	<select id="selectListCount" resultType="_int">
		select 
		       count(*)
		  from vw_all_confirmlist
		 where rank = 1
		   and confirm_name = #{userName}
		   and status in ('D', 'P')
	</select>
	
	
	<!-- 내가 결재자일 경우 결재대기 -->
	<select id="selectStandByList" resultMap="approvalResult">
		  select 
		  		 origin_appr_no elec_appr_no
		       , writer_name
		       , decode(form_no, 1, '업무기안서'
                               , 2, '비품구매품의서'
                               , 3, '증명서신청'
                               , 4, '채용요청서'
                               , 5, '일반품의서') form_no
		       , write_dept
		       , elec_title
		       , emc_yn
		       , create_date
		       , status
		       , origin_name
		       , confirm_name first_user
		       , origin_pcd_no procedure_no
            from vw_all_confirmlist
           where rank = 1
             and confirm_name = #{userName}
             and status in ('D', 'P')
           order
              by create_date desc
	</select>
	
	<!-- 내가 기안자일 경우 전체, 대기, 진행, 승인, 반려, 임시저장 게시글 갯수 -->
	<select id="selectSubmitListCount" resultType="_int">
		select
		       count(*)
		  from elec_approval
		 where writer_no = #{userNo}
	   	  <if test='status == "A"'>
		  	and status in ('D', 'P')
		  </if>
		  <if test='status == "D"'>
		  	and status = 'D'
		  </if>
		  <if test='status == "P"'>
		  	and status = 'P'
		  </if>
		  <if test='status == "Y"'>
		  	and status = 'Y'
		  </if>
		  <if test='status == "R"'>
		  	and status = 'R'
		  </if>
		  <if test='status == "T"'>
		  	and status = 'T'
		  </if>
	</select>
	
	
	<!-- 내가 기안자 경우 전체, 결재대기(D), 진행중(P)-->
	<select id="selectSubmitStandByList" resultMap="approvalResult">
		  select 
			     origin_appr_no elec_appr_no
			   , writer_name
			   , write_dept
			   , decode(form_no, 1, '업무기안서'
			                   , 2, '비품구매품의서'
			                   , 3, '증명서신청'
			                   , 4, '채용요청서'
			                   , 5, '일반품의서') form_no
			   , elec_title
			   , emc_yn
			   , create_date
			   , v1.status status
			   , origin_name
			   , confirm_name first_user
			   , origin_pcd_no procedure_no
			   , last_confirm third_user
			from vw_all_confirmlist v1
			join vw_last_confirm v2 on(origin_appr_no = v2.elec_appr_no)
			where rank = 1
			  and writer_name = #{userName}
			  <if test='status == "A"'>
			  	and v1.status in ('D', 'P')
			  </if>
			  <if test='status == "D"'>
			  	and v1.status = 'D'
			  </if>
			  <if test='status == "P"'>
			  	and v1.status = 'P'
			  </if>
			order 
			  by create_date desc
	</select>
	
	<!-- 내가 기안자일때 승인,반려,임시저장 조회 -->	
	<select id="selectSubmitEndList" resultMap="approvalResult">
		select
		       elec_appr_no
		     , decode(form_no, 1, '업무기안서'
			                 , 2, '비품구매품의서'
			                 , 3, '증명서신청'
			                 , 4, '채용요청서'
			                 , 5, '일반품의서') form_no
		     , user_name writer_name
		     , emc_yn
		     , elec_title
		     , origin_name
		     , ep.status status
		     , create_date
		  from elec_approval ep
		  join employee on (writer_no = user_no)
		 where writer_no = #{userNo}
	   	 <if test='status == "Y"'>
		   and ep.status = 'Y'
		 </if>
		 <if test='status == "R"'>
		   and ep.status = 'R'
		 </if>
		 <if test='status == "T"'>
		   and ep.status = 'T'
		 </if>
	</select>
	
	<!-- 업무기안서 상세보기 -->
	<select id="selectApproval" resultMap="approvalResult">
		select
		       decode(form_no, 1, '업무기안서'
		                     , 2, '비품구매품의서'
		                     , 3, '증명서신청'
		                     , 4, '채용요청서'
		                     , 5, '일반품의서') form_no
		     , elec_appr_no
		     , write_dept
		     , grade
		     , e1.user_name writer_name
		     , decode(ea.status, 'D', '결재대기'
		                       , 'P', '진행중'
		                       , 'N', '기안회수(삭제)'
		                       , 'R', '반려'
		                       , 'Y', '결재완료(승인)'
		                       , 'T', '임시저장') status
		     , e2.user_name read_no
		     , e3.user_name reference_no
		     , elec_title
		     , create_date
		     , to_char(storage_year, 'YYYY-DD-MM') storage_year
		     , origin_name
		     , file_path
		     , confirm_no confirmNo
             , confirm_user confirmUser
             , vac.job_code jobCode
             , procedure_no procedureNo
             , vac.status confirmStatus
             , reject_reason rejectReason
             , confirm_date confirmDate
		  from elec_approval ea
		  join employee e1 on (writer_no = e1.user_no)
		  left join employee e2 on (read_no = e2.user_no)
		  left join employee e3 on (reference_no = e3.user_no)
		  join vw_all_confirm_list vac using(elec_appr_no)
		 where elec_appr_no = #{ano}
	</select>
	
	<!-- 업무기안서 상세조회 -->
	<select id="selectBusinessDraft" resultMap="approvalResult">
		select
		       content bdContent
		  from business_draft
		 where elec_appr_no = #{ano}
	</select>
	
	<!-- 비품구매품의서 상세조회 -->
	<select id="selectEquipmentBuy" resultMap="approvalResult">
		select
		       elec_appr_no
		     , buy_req_team
		     , limit_date
		     , pay
		     , purpose
		     , total_pay
		     , item_no itemNo
		     , item_seq itemSeq
		     , item_name itemName
		     , item_size itemSize
		     , unit
		     , total
		     , amount
		     , note
		  from equipment_buy
		  join item_list using(elec_appr_no)
		 where elec_appr_no = #{ano}
	</select>
	
	<select id="selectCertificate" resultMap="approvalResult">
		select
		       certificate_type
		     , use
		     , where_submit
		     , submit_date
		     , content crContent
		  from certificate
		  join elec_approval using(elec_appr_no)
		 where elec_appr_no = #{ano}
	</select>
	
	<select id="selectRecruiment" resultMap="approvalResult">
		select
		       dept
		     , employee
		     , work_experience
		     , offer_date
		     , qualification
		     , position
		     , content rcContent
		  from recruiment
		  join elec_approval using(elec_appr_no)
		 where elec_appr_no = #{ano}
	</select>
	
	<select id="selectExpenseReport" resultMap="approvalResult">
		select
		       imposition
		     , content erContent
		  from expense_report
		  join elec_approval using(elec_appr_no)
		 where elec_appr_no = #{ano}
	</select>
	
	<!-- 전자결재 공통테이블 -->
	<insert id="insertApproval">
		insert
		  into elec_approval
		  (
		    elec_appr_no
		  , writer_no
		  , form_no
		  , write_dept
		  , elec_title
		  , emc_yn
		  , storage_year
		  , grade
		  , read_no
		  , reference_no
		  , origin_name
		  , file_path
		  )
		  values
		  (
		  <choose>
		  	<when test='formNo == "3"'>
		  		'SA-CE-'||lpad(seq_elno.nextval,5,0)
		  	</when>
		  	<when test='formNo == "4"'>
		  		'SA-RC-'||lpad(seq_elno.nextval,5,0)
		  	</when>
		  	<when test='formNo == "5"'>
		  		'SA-ER-'||lpad(seq_elno.nextval,5,0)
		  	</when>
		  	<when test='formNo == "1"'>
		  		'SA-BD-'||lpad(seq_elno.nextval,5,0)
		  	</when>
		  	<otherwise>
		  		'SA-EB-'||lpad(seq_elno.nextval,5,0)
		  	</otherwise>
		  </choose>
		  , #{userNo}
		  , #{formNo}
		  , #{writeDept}
		  , #{approvalTitle}
		  , #{emergancy}
		  , add_months(sysdate, #{storageYear})
		  , #{grade}
		  , #{read}
		  , #{reference}
		  , #{originName}
		  , #{filePath}
		  )		  
	</insert>
	
	<!-- 결재자 테이블에 등록 -->
	<insert id="insertConfirm">
		insert
		  into confirm
		  (
		    confirm_no
		  , elec_appr_no
		  , confirm_user
		  , procedure_no
		  )
		  values
		  (
		    seq_cfno.nextval
		  , #{formNoName}||lpad(seq_elno.currval,5,0)
		  , #{confirmNo}
		  , #{procedureNo}
		  )
	</insert>
	
	<!-- 증명서 신청 -->
	<insert id="insertCertificate">
		insert
		  into certificate
		  (
		    elec_appr_no
		  , certificate_type
		  , use
		  , where_submit
		  , submit_date
		  , content
		  )
		  values
		  (
		    'SA-CE-'||lpad(seq_elno.currval,5,0)
		  , #{certificateType}
		  , #{use}
		  , #{whereSubmit}
		  , #{submitDate}
		  , #{certificateContent}  
		  )
	</insert>
	
	<!-- 채용요청서 -->
	<insert id="insertRecruiment">
		insert
		  into recruiment
		  (
		    elec_appr_no
		  , dept
		  , employee
		  , work_experience
		  , offer_date
		  , qualification
		  , position
		  , content
		  )
		  values
		  (
		    'SA-RC-'||lpad(seq_elno.currval,5,0)
		  , #{recruimentDept}
		  , #{employee}
		  , #{workExperience}
		  , #{offerDate}
		  , #{qualification}
		  , #{position}
		  , #{recruimentContent}
		  )
	</insert>
	
	<!-- 일반품의서 -->
	<insert id="insertExpenseReport">
		insert
		  into expense_report
		  (
		    elec_appr_no
		  , imposition
		  , content
		  )
		  values
		  (
		    'SA-ER-'||lpad(seq_elno.currval,5,0)
		  , #{imposition}
		  , #{expenseReportContent}
		  )
	</insert>
	
	<!-- 업무기안서 -->
	<insert id="insertBusinessDraft">
		insert
		  into business_draft
		  (
		    elec_appr_no
		  , content
		  )
		  values
		  (
		    'SA-BD-'||lpad(seq_elno.currval,5,0)
		  , #{businessDraftContent}
		  )
	</insert>
	
	<!-- 비품구매품의서 -->
	<insert id="insertEquipmentBuy">
		insert
		  into equipment_buy
		  (
		    elec_appr_no
		  , buy_req_team
		  , limit_date
		  , pay
		  , purpose
		  , total_pay
		  )
		  values
		  (
		    'SA-EB-'||lpad(seq_elno.currval,5,0)
		  , #{requestTeam}
		  , #{limitDate}
		  , #{pay}
		  , #{purpose}
		  , #{totalPay}
		  )
	</insert>
	
	<!-- 비품구매 아이템 -->
	<insert id="insertItemList">
		insert
		  into item_list
		  (
		    item_no
		  , elec_appr_no
		  , item_seq
		  , item_name
		  , item_size
		  , unit
		  , total
		  , amount
		  , note
		  )
		  values
		  (
		    'ITEM-'||lpad(seq_ilno.nextval,3,0)
		  , 'SA-EB-'||lpad(seq_elno.currval,5,0)
		  , #{itemSeq}
		  , #{itemName}
		  , #{itemSize}
		  , #{unit}
		  , #{total}
		  , #{amount}
		  , #{note}
		  )
	</insert>
	
	
	
	
	
	
	
	

</mapper>